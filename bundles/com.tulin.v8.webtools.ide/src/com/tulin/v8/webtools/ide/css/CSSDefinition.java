package com.tulin.v8.webtools.ide.css;


public class CSSDefinition {
	
	/**
	 * @see http://it028.com/css-font.html
	 * @see @see https://www.w3cschool.cn/css/
	 */
	public static final CSSInfo[] CSS_KEYWORDS = {
			new CSSInfo("text-indent"),
			new CSSInfo("text-align"),
			new CSSInfo("text-decoration"),
			new CSSInfo("text-shadow"),
			new CSSInfo("letter-spacing"),
			new CSSInfo("word-spacing"),
			new CSSInfo("text-transform"),
			new CSSInfo("white-space"),
			new CSSInfo("color"),
			new CSSInfo("background-color"),
			new CSSInfo("background-image"),
			new CSSInfo("background-repeat"),
			new CSSInfo("background-attachment"),
			new CSSInfo("background-position"),
			new CSSInfo("background"),
			new CSSInfo("padding-left"),
			new CSSInfo("padding-right"),
			new CSSInfo("padding-top"),
			new CSSInfo("padding-bottom"),
			new CSSInfo("padding"),
			new CSSInfo("border-left"),
			new CSSInfo("border-right"),
			new CSSInfo("border-top"),
			new CSSInfo("border-bottom"),
			new CSSInfo("border"),
			new CSSInfo("margin-left"),
			new CSSInfo("margin-right"),
			new CSSInfo("margin-top"),
			new CSSInfo("margin-bottom"),
			new CSSInfo("margin"),
			new CSSInfo("font-style"),
			new CSSInfo("font-weight"),
			new CSSInfo("font-variant"),
			new CSSInfo("font-stretch"),
			new CSSInfo("font-size-adjust"),
			new CSSInfo("font-size"),
			new CSSInfo("font-family"),
			new CSSInfo("font"),
			new CSSInfo("border-left-width"),
			new CSSInfo("border-right-width"),
			new CSSInfo("border-top-width"),
			new CSSInfo("border-bottom-width"),
			new CSSInfo("border-left-color"),
			new CSSInfo("border-right-color"),
			new CSSInfo("border-top-color"),
			new CSSInfo("border-bottom-color"),
			new CSSInfo("border-left-style"),
			new CSSInfo("border-right-style"),
			new CSSInfo("border-top-style"),
			new CSSInfo("border-bottom-style"),
			new CSSInfo("display"),
			new CSSInfo("position"),
			new CSSInfo("top"),
			new CSSInfo("bottom"),
			new CSSInfo("left"),
			new CSSInfo("right"),
			new CSSInfo("float"),
			new CSSInfo("clear"),
			new CSSInfo("z-index"),
			new CSSInfo("direction"),
			new CSSInfo("unicode-bidi"),
			new CSSInfo("width"),
			new CSSInfo("min-width"),
			new CSSInfo("max-width"),
			new CSSInfo("height"),
			new CSSInfo("min-height"),
			new CSSInfo("max-height"),
			new CSSInfo("line-height"),
			new CSSInfo("vertical-align"),
			new CSSInfo("overflow"),
			new CSSInfo("clip"),
			new CSSInfo("visibility"),
			new CSSInfo("caption-side"),
			new CSSInfo("table-layout"),
			new CSSInfo("border-collapse"),
			new CSSInfo("border-spacing"),
			new CSSInfo("empty-cells"),
			new CSSInfo("content"),
			new CSSInfo("quotes"),
			new CSSInfo("list-style-type"),
			new CSSInfo("list-style-image"),
			new CSSInfo("list-style-position"),
			new CSSInfo("list-style"),
			new CSSInfo("marker-offset"),
			new CSSInfo("cursor"),
			new CSSInfo("outline-width"),
			new CSSInfo("outline-color"),
			new CSSInfo("outline-style"),
			new CSSInfo("outline"),
			new CSSInfo("a:link"),
			new CSSInfo("a:visited"),
			new CSSInfo("a:hover"),
			new CSSInfo("a:active")
	};
	
	/**
	 * @see http://it028.com/css-font.html
	 * @see https://www.w3cschool.cn/css/
	 */
	public static final CSSValue[] CSS_VALUES = {
			new CSSValue("text-indent:", new CSSInfo[] {new CSSInfo("length",CSSStyles.getString("text-indent.length")),new CSSInfo("%",CSSStyles.getString("text-indent.percentage")),new CSSInfo("inherit",CSSStyles.getString("text-indent.inherit"))}),
			new CSSValue("text-align:", new CSSInfo[] {new CSSInfo("left",CSSStyles.getString("text-align.left")),new CSSInfo("right",CSSStyles.getString("text-align.right")),new CSSInfo("center",CSSStyles.getString("text-align.center")),new CSSInfo("justify",CSSStyles.getString("text-align.justify")),new CSSInfo("inherit",CSSStyles.getString("text-align.inherit"))}),
			new CSSValue("text-decoration:", new CSSInfo[] {new CSSInfo("none",CSSStyles.getString("text-decoration.none")),new CSSInfo("underline",CSSStyles.getString("text-decoration.underline")),new CSSInfo("overline",CSSStyles.getString("text-decoration.overline")),new CSSInfo("line-through",CSSStyles.getString("text-decoration.line-through")),new CSSInfo("blink",CSSStyles.getString("text-decoration.blink")),new CSSInfo("inherit",CSSStyles.getString("text-decoration.inherit"))}),
			new CSSValue("text-shadow:", new CSSInfo[] {new CSSInfo("h-shadow",CSSStyles.getString("text-shadow.h-shadow")),new CSSInfo("v-shadow",CSSStyles.getString("text-shadow.v-shadow")),new CSSInfo("blur",CSSStyles.getString("text-shadow.blur")),new CSSInfo("color",CSSStyles.getString("text-shadow.color"))}),
			new CSSValue("letter-spacing:", new CSSInfo[] {new CSSInfo("normal",CSSStyles.getString("letter-spacing.normal")),new CSSInfo("length",CSSStyles.getString("letter-spacing.length")),new CSSInfo("inherit",CSSStyles.getString("letter-spacing.inherit"))}),
			new CSSValue("word-spacing:", new CSSInfo[] {new CSSInfo("normal",CSSStyles.getString("word-spacing.normal")),new CSSInfo("length",CSSStyles.getString("word-spacing.length")),new CSSInfo("inherit",CSSStyles.getString("word-spacing.inherit"))}),
			new CSSValue("text-transform:", new CSSInfo[] {new CSSInfo("none",CSSStyles.getString("text-transform.none")),new CSSInfo("capitalize",CSSStyles.getString("text-transform.capitalize")),new CSSInfo("uppercase",CSSStyles.getString("text-transform.uppercase")),new CSSInfo("lowercase",CSSStyles.getString("text-transform.lowercase")),new CSSInfo("inherit",CSSStyles.getString("text-transform.inherit"))}),
			new CSSValue("white-space:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("pre",""),new CSSInfo("nowrap",""),new CSSInfo("pre-wrap",""),new CSSInfo("pre-line",""),new CSSInfo("inherit","")}),
			new CSSValue("color:", new CSSInfo[] {new CSSInfo("red",CSSStyles.getString("color.red")),new CSSInfo("blue",CSSStyles.getString("color.blue")),new CSSInfo("green",CSSStyles.getString("color.green")),new CSSInfo("#",CSSStyles.getString("color.16")),new CSSInfo("rgb(255,0,0)",CSSStyles.getString("color.rgb")),new CSSInfo("inherit",CSSStyles.getString("color.inherit"))}),
			new CSSValue("background-color:", new CSSInfo[] {new CSSInfo("red",""),new CSSInfo("blue",""),new CSSInfo("green",""),new CSSInfo("#",""),new CSSInfo("rgb(255,0,0)","")}),
			new CSSValue("background-image:", new CSSInfo[] {new CSSInfo("url('')",CSSStyles.getString("background-image.url")),new CSSInfo("none",CSSStyles.getString("background-image.none")),new CSSInfo("inherit",CSSStyles.getString("background-image.inherit"))}),
			new CSSValue("background-repeat:", new CSSInfo[] {new CSSInfo("repeat",CSSStyles.getString("background-repeat.repeat")),new CSSInfo("repeat-x",CSSStyles.getString("background-repeat.repeat-x")),new CSSInfo("repeat-y",CSSStyles.getString("background-repeat.repeat-y")),new CSSInfo("no-repeat",CSSStyles.getString("background-repeat.no-repeat")),new CSSInfo("inherit",CSSStyles.getString("background-repeat.inherit"))}),
			new CSSValue("background-attachment:", new CSSInfo[] {new CSSInfo("scroll",CSSStyles.getString("background-attachment.scroll")),new CSSInfo("fixed",CSSStyles.getString("background-attachment.fixed")),new CSSInfo("local",CSSStyles.getString("background-attachment.local")),new CSSInfo("initial",CSSStyles.getString("background-attachment.initial")),new CSSInfo("inherit",CSSStyles.getString("background-attachment.inherit"))}),
			new CSSValue("background-position:", new CSSInfo[] {new CSSInfo("left top",CSSStyles.getString("background-position.left")), new CSSInfo("x% y%",CSSStyles.getString("background-position.xy")), new CSSInfo("xpos ypos",CSSStyles.getString("background-position.xpyp")), new CSSInfo("inherit",CSSStyles.getString("background-position.inherit"))}),
			new CSSValue("background:", new CSSInfo[] {new CSSInfo("red",""),new CSSInfo("blue",""),new CSSInfo("green",""),new CSSInfo("#",""),new CSSInfo("rgb(255,0,0)",""),new CSSInfo("url('')","")}),
			new CSSValue("padding-left:"),
			new CSSValue("padding-right:"),
			new CSSValue("padding-top:"),
			new CSSValue("padding-bottom:"),
			new CSSValue("padding:"),
			new CSSValue("border-left:"),
			new CSSValue("border-right:"),
			new CSSValue("border-top:"),
			new CSSValue("border-bottom:"),
			new CSSValue("border:"),
			new CSSValue("margin-left:"),
			new CSSValue("margin-right:"),
			new CSSValue("margin-top:"),
			new CSSValue("margin-bottom:"),
			new CSSValue("margin:"),
			new CSSValue("font-style:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("italic",""),new CSSInfo("oblique",""),new CSSInfo("inherit","")}),
			new CSSValue("font-weight:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("bold",""),new CSSInfo("bolder",""),new CSSInfo("lighter",""),new CSSInfo("inherit","")}),
			new CSSValue("font-variant:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("small-caps",""),new CSSInfo("inherit","")}),
			new CSSValue("font-stretch:"),
			new CSSValue("font-size-adjust:"),
			new CSSValue("font-size:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" pt",""),new CSSInfo(" %",""),new CSSInfo("xx-small",""),new CSSInfo("x-small",""),new CSSInfo("small",""),new CSSInfo("medium",""),new CSSInfo("large",""),new CSSInfo("x-large",""),new CSSInfo("xx-large",""),new CSSInfo("smaller",""),new CSSInfo("larger",""),new CSSInfo("inherit","")}),
			new CSSValue("font-family:", new CSSInfo[] {new CSSInfo("family-name",""),new CSSInfo("generic-family","")}),
			new CSSValue("font:", new CSSInfo[] {new CSSInfo("font-style",""),new CSSInfo("font-variant",""),new CSSInfo("font-weight",""),new CSSInfo("font-size/line-height","")}),
			new CSSValue("border-left-width:"),
			new CSSValue("border-right-width:"),
			new CSSValue("border-top-width:"),
			new CSSValue("border-bottom-width:"),
			new CSSValue("border-left-color:"),
			new CSSValue("border-right-color:"),
			new CSSValue("border-top-color:"),
			new CSSValue("border-bottom-color:"),
			new CSSValue("border-left-style:"),
			new CSSValue("border-right-style:"),
			new CSSValue("border-top-style:"),
			new CSSValue("border-bottom-style:"),
			new CSSValue("display:", new CSSInfo[] {new CSSInfo("none",CSSStyles.getString("display.none")),new CSSInfo("block",CSSStyles.getString("display.block")),new CSSInfo("inline",CSSStyles.getString("display.inline")),new CSSInfo("inline-block",CSSStyles.getString("display.inline-block"))}),
			new CSSValue("position:", new CSSInfo[] {new CSSInfo("static",CSSStyles.getString("position.static")),new CSSInfo("fixed",CSSStyles.getString("position.fixed")),new CSSInfo("relative",CSSStyles.getString("position.relative")),new CSSInfo("absolute",CSSStyles.getString("position.absolute")),new CSSInfo("sticky",CSSStyles.getString("position.sticky"))}),
			new CSSValue("top:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("bottom:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("left:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("right:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("float:", new CSSInfo[] {new CSSInfo("left",""),new CSSInfo("right",""),new CSSInfo("none",""),new CSSInfo("inherit","")}),
			new CSSValue("clear:", new CSSInfo[] {new CSSInfo("left",""),new CSSInfo("right",""),new CSSInfo("both",""),new CSSInfo("none",""),new CSSInfo("inherit","")}),
			new CSSValue("z-index:", new CSSInfo[] {new CSSInfo("1","1-9999")}),
			new CSSValue("direction:", new CSSInfo[] {new CSSInfo("ltr",""),new CSSInfo("rtl",""),new CSSInfo("inherit","")}),
			new CSSValue("unicode-bidi:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("embed",""),new CSSInfo("bidi-override",""),new CSSInfo("initial",""),new CSSInfo("inherit","")}),
			new CSSValue("width:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("min-width:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("max-width:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("height:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("min-height:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("max-height:", new CSSInfo[] {new CSSInfo(" px",""),new CSSInfo(" %","")}),
			new CSSValue("line-height:", new CSSInfo[] {new CSSInfo("normal",""),new CSSInfo("number",""),new CSSInfo("length",""),new CSSInfo("%",""),new CSSInfo("inherit","")}),
			new CSSValue("vertical-align:", new CSSInfo[] {new CSSInfo("baseline",""),new CSSInfo("sub",""),new CSSInfo("super",""),new CSSInfo("top",""),new CSSInfo("text-top",""),new CSSInfo("middle",""),new CSSInfo("bottom",""),new CSSInfo("text-bottom",""),new CSSInfo("length",""),new CSSInfo("%",""),new CSSInfo("inherit","")}),
			new CSSValue("overflow:", new CSSInfo[] {new CSSInfo("visible",CSSStyles.getString("overflow.visible")),new CSSInfo("hidden",CSSStyles.getString("overflow.hidden")),new CSSInfo("scroll",CSSStyles.getString("overflow.scroll")),new CSSInfo("auto",CSSStyles.getString("overflow.auto")),new CSSInfo("inherit",CSSStyles.getString("overflow.inherit"))}),
			new CSSValue("clip:"),
			new CSSValue("visibility:"),
			new CSSValue("caption-side:"),
			new CSSValue("table-layout:"),
			new CSSValue("border-collapse:"),
			new CSSValue("border-spacing:"),
			new CSSValue("empty-cells:"),
			new CSSValue("content:"),
			new CSSValue("quotes:"),
			new CSSValue("list-style-type:"),
			new CSSValue("list-style-image:"),
			new CSSValue("list-style-position:"),
			new CSSValue("list-style:"),
			new CSSValue("marker-offset:"),
			new CSSValue("cursor:", new CSSInfo[] {new CSSInfo("auto",CSSStyles.getString("cursor.auto")),new CSSInfo("default",CSSStyles.getString("cursor.default")),new CSSInfo("pointer",CSSStyles.getString("cursor.pointer")),new CSSInfo("help",CSSStyles.getString("cursor.help")),new CSSInfo("progress",CSSStyles.getString("cursor.progress")),new CSSInfo("wait",CSSStyles.getString("cursor.wait")),new CSSInfo("text",CSSStyles.getString("cursor.text")),new CSSInfo("move",CSSStyles.getString("cursor.move")),new CSSInfo("col-resize",CSSStyles.getString("cursor.col-resize")),new CSSInfo("row-resize",CSSStyles.getString("cursor.row-resize")),new CSSInfo("n-resize",CSSStyles.getString("cursor.n-resize")),new CSSInfo("s-resize",CSSStyles.getString("cursor.s-resize")),new CSSInfo("grab",CSSStyles.getString("cursor.grab")),new CSSInfo("grabbing",CSSStyles.getString("cursor.grabbing")),new CSSInfo("none",CSSStyles.getString("cursor.none"))}),
			new CSSValue("outline-width:"),
			new CSSValue("outline-color:"),
			new CSSValue("outline-style:"),
			new CSSValue("outline:")
	};
	
//	static {
//		// sort by length
//		Arrays.sort(CSS_KEYWORDS,new Comparator(){
//			public int compare(Object o1, Object o2){
//				CSSInfo info1 = (CSSInfo)o1;
//				CSSInfo info2 = (CSSInfo)o2;
//				if(info1.getReplaceString().length() > info2.getReplaceString().length()){
//					return -1;
//				}
//				if(info1.getReplaceString().length() < info2.getReplaceString().length()){
//					return 1;
//				}
//				return 0;
//			}
//		});
//	}
}
